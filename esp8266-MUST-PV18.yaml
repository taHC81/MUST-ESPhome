substitutions:
  name: must-pv1800-uart
  device_description: "Monitor MUST PV1800 inverter via UART"

esphome:
  name: ${name}
  comment: ${device_description}
  project:
    name: "tahc81.must-epshome"
    version: 1.0.0

esp8266:
  board: esp01_1m
  # board: d1_mini_pro

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  # - ssid: !secret wifi_ssid_garage
    # password: !secret wifi_password

ota:
logger:
api:

mqtt:
   broker: 192.168.0.102

uart:
  id: mod_bus
  tx_pin: GPIO12
  rx_pin: GPIO13
  baud_rate: 19200
  stop_bits: 1
  parity: NONE
  data_bits: 8

modbus:
  id: mod_bus_must
  send_wait_time: 1250ms

modbus_controller:
  - id: must
    address: 0x4
    modbus_id: mod_bus_must
    setup_priority: -10
    update_interval: 3s

switch:
  - platform: restart
    name: "ESPhome PV18 Restart"

sensor:
  - platform: uptime
    name: Uptime Sensor
# charger sensors
  - platform: modbus_controller
    address: 15201
    name: "Charger workstate"
    register_type: holding
  - platform: modbus_controller
    address: 15202
    name: "MPPT state"
    register_type: holding
  - platform: modbus_controller
    address: 15203
    name: "Charging state"
    register_type: holding
  - platform: modbus_controller
    address: 15205
    name: "PV voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 15206
    name: "Battery voltage (charger side)"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 15207
    name: "Charger Current"
    register_type: holding
    unit_of_measurement: "A"
    accuracy_decimals: 1
    icon: mdi:current-dc
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 15208
    register_type: holding
    name: "Charger power"
    unit_of_measurement: "W"
    accuracy_decimals: 1
    icon: mdi:flash
  # - platform: modbus_controller
    # address: 15211
    # register_type: holding
    # name: "Battery Relay"
  # - platform: modbus_controller
    # address: 15212
    # register_type: holding
    # name: "PV Relay"
    # icon: mdi:electric-switch

  - platform: modbus_controller
    address: 15217
    register_type: holding
    # name: "Accumulated charger power MWh"
    id: charger_total_mwh
    internal: true
    # unit_of_measurement: "MWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
  - platform: modbus_controller
    address: 15218
    register_type: holding
    # name: "Accumulated charger power kWh"
    id: charger_total_kwh
    internal: true
    # unit_of_measurement: "kWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
    filters:
      multiply: 0.1

  - platform: template
    name: "Accumulated charger power"
    unit_of_measurement: kWh
    lambda: |-
     return (id(charger_total_mwh).state * 1000.0 + id(charger_total_kwh).state );
    accuracy_decimals: 1

# inverter sensors
  - platform: modbus_controller
    address: 25201
    register_type: holding
    name: "Inverter Work state"
  - platform: modbus_controller
    address: 25205
    name: "Battery voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 25206
    name: "Inverter voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  - platform: modbus_controller
    address: 25207
    name: "Grid voltage"
    register_type: holding
    unit_of_measurement: "V"
    accuracy_decimals: 1
    icon: mdi:sine-wave
    filters:
      multiply: 0.1
  # - platform: modbus_controller
    # address: 25208
    # name: "Bus voltage"
    # register_type: holding
    # unit_of_measurement: "V"
    # accuracy_decimals: 1
    # icon: mdi:sine-wave
    # filters:
      # multiply: 0.1
  # - platform: modbus_controller
    # address: 25209
    # name: "Control current"
    # register_type: holding
    # unit_of_measurement: "A"
    # accuracy_decimals: 1
    # icon: mdi:current-dc
    # filters:
      # multiply: 0.1
  # - platform: modbus_controller
    # address: 25210
    # name: "Inverter current"
    # register_type: holding
    # unit_of_measurement: "A"
    # accuracy_decimals: 1
    # icon: mdi:current-dc
    # filters:
      # multiply: 0.1
  # - platform: modbus_controller
    # address: 25211
    # name: "Grid current"
    # register_type: holding
    # unit_of_measurement: "A"
    # accuracy_decimals: 1
    # icon: mdi:current-dc
    # filters:
      # multiply: 0.1
  # - platform: modbus_controller
    # address: 25212
    # name: "Load current"
    # register_type: holding
    # unit_of_measurement: "A"
    # accuracy_decimals: 1
    # icon: mdi:current-dc
    # filters:
      # multiply: 0.1
  - platform: modbus_controller
    address: 25213
    name: "Inverter power"
    register_type: holding
    unit_of_measurement: "W"
    accuracy_decimals: 1
    icon: mdi:flash
  - platform: modbus_controller
    address: 25214
    name: "Grid power"
    register_type: holding
    unit_of_measurement: "W"
    accuracy_decimals: 1
    value_type: S_WORD
    icon: mdi:flash
  - platform: modbus_controller
    address: 25215
    name: "Load power"
    register_type: holding
    unit_of_measurement: "W"
    accuracy_decimals: 1
    icon: mdi:flash
  - platform: modbus_controller
    address: 25216
    name: "System load"
    register_type: holding
    unit_of_measurement: "%"
    accuracy_decimals: 1
    icon: mdi:flash

# 25217 Inverter complex power(S)	1	VA
# 25218 Grid complex power(S)		1	VA
# 25219 Load complex power(S)		1	VA
# 25221 Inverter reactive power(Q)	1	var
# 25222 Grid reactive power(Q)		1	var
# 25223 Load reactive power(Q)		1	var
# 25225 Inverter frequency			0.01	Hz
# 25226 Grid frequency				0.01	Hz

  # - platform: modbus_controller
    # address: 25233
    # register_type: holding
    # name: "AC radiator temp"
    # accuracy_decimals: 1
    # unit_of_measurement: "°C"
  # - platform: modbus_controller
    # address: 25234
    # register_type: holding
    # name: "Transformer temp"
    # unit_of_measurement: "°C"
    # accuracy_decimals: 1
  # - platform: modbus_controller
    # address: 25235
    # register_type: holding
    # name: "DC Radiator temp"
    # unit_of_measurement: "°C"
    # accuracy_decimals: 1
  # - platform: modbus_controller
    # address: 25237
    # register_type: holding
    # name: "Inverter Relay"
    # icon: mdi:electric-switch
  # - platform: modbus_controller
    # address: 25238
    # register_type: holding
    # name: "Grid Relay"
    # icon: mdi:electric-switch
  # - platform: modbus_controller
    # address: 25239
    # register_type: holding
    # name: "Load Relay"
    # icon: mdi:electric-switch
  # - platform: modbus_controller
    # address: 25240
    # register_type: holding
    # name: "N_Line Relay"
    # icon: mdi:electric-switch
  # - platform: modbus_controller
    # address: 25241
    # register_type: holding
    # name: "DC Relay"
    # icon: mdi:electric-switch
  # - platform: modbus_controller
    # address: 25242
    # register_type: holding
    # name: "Earth Relay"
    # icon: mdi:electric-switch

  - platform: modbus_controller
    address: 25247
    register_type: holding
    # name: "Accumulated discharger power MWh"
    id: discharger_total_mwh
    internal: true
    # unit_of_measurement: "MWh"
    # icon: mdi:flash
  - platform: modbus_controller
    address: 25248
    register_type: holding
    # name: "Accumulated discharger power kWh"
    id: discharger_total_kwh
    internal: true
    # unit_of_measurement: "kWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated discharger power"
    unit_of_measurement: kWh
    lambda: |-
     return (id(discharger_total_mwh).state * 1000.0 + id(discharger_total_kwh).state );
    accuracy_decimals: 1

  - platform: modbus_controller
    address: 25249
    register_type: holding
    # name: "Accumulated buy power MWh"
    id: buy_mwh
    internal: true
    # unit_of_measurement: "MWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
  - platform: modbus_controller
    address: 25250
    register_type: holding
    # name: "Accumulated buy power kWh"
    id: buy_kwh
    internal: true
    # unit_of_measurement: "kWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated buy power"
    unit_of_measurement: kWh
    lambda: |-
     return (id(buy_mwh).state * 1000.0 + id(buy_kwh).state );
    accuracy_decimals: 1

  # - platform: modbus_controller
    # address: 25251
    # register_type: holding
    # name: "Accumulated sell power MWh"
    # id: sell_mwh
    # unit_of_measurement: "MWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
  # - platform: modbus_controller
    # address: 25252
    # register_type: holding
    # name: "Accumulated sell power kWh"
    # id: sell_kwh
    # unit_of_measurement: "kWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
    # filters:
      # multiply: 0.1
  # - platform: template
    # name: "Accumulated sell power"
    # unit_of_measurement: kWh
    # lambda: |-
     # return (id(sell_mwh).state * 1000.0 + id(sell_kwh).state );
    # accuracy_decimals: 1

  - platform: modbus_controller
    address: 25253
    register_type: holding
    # name: "Accumulated load power MWh"
    id: load_mwh
    internal: true
    # unit_of_measurement: "MWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
  - platform: modbus_controller
    address: 25254
    register_type: holding
    # name: "Accumulated load power kWh"
    id: load_kwh
    internal: true
    # unit_of_measurement: "kWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
    filters:
      multiply: 0.1
  - platform: template
    name: "Accumulated load power"
    unit_of_measurement: kWh
    lambda: |-
     return (id(load_mwh).state * 1000.0 + id(load_kwh).state );
    accuracy_decimals: 1

  # - platform: modbus_controller
    # address: 25255
    # register_type: holding
    # name: "Accumulated self_use power MWh"
    # id: self_use_kwh
    # unit_of_measurement: "MWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
  # - platform: modbus_controller
    # address: 25256
    # register_type: holding
    # name: "Accumulated self_use power kWh"
    # id: self_use_mwh
    # unit_of_measurement: "kWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
    # filters:
      # multiply: 0.1
  # - platform: template
    # name: "Accumulated self_use power"
    # unit_of_measurement: kWh
    # lambda: |-
     # return (id(self_use_mwh).state * 1000.0 + id(self_use_kwh).state );
    # accuracy_decimals: 1

  # - platform: modbus_controller
    # address: 25257
    # register_type: holding
    # name: "Accumulated PV_sell power MWh"
    # id: pv_sell_mwh
    # unit_of_measurement: "MWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
  # - platform: modbus_controller
    # address: 25258
    # register_type: holding
    # name: "Accumulated PV_sell power kWh"
    # id: pv_sell_kwh
    # unit_of_measurement: "kWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
    # filters:
      # multiply: 0.1
  # - platform: template
    # name: "Accumulated PV_sell power"
    # unit_of_measurement: kWh
    # lambda: |-
     # return (id(pv_sell_mwh).state * 1000.0 + id(pv_sell_kwh).state );
    # accuracy_decimals: 1

  # - platform: modbus_controller
    # address: 25259
    # register_type: holding
    # name: "Accumulated grid_charger power MWh"
    # id: grid_charger_mwh
    # unit_of_measurement: "MWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
  # - platform: modbus_controller
    # address: 25260
    # register_type: holding
    # name: "Accumulated grid_charger power kWh"
    # id: grid_charger_kwh
    # unit_of_measurement: "kWh"
    # accuracy_decimals: 1
    # icon: mdi:flash
    # filters:
      # multiply: 0.1
  # - platform: template
    # name: "Accumulated grid_charger power"
    # unit_of_measurement: kWh
    # lambda: |-
     # return (id(grid_charger_mwh).state * 1000.0 + id(grid_charger_kwh).state );
    # accuracy_decimals: 1

  - platform: modbus_controller
    address: 25273
    register_type: holding
    value_type: S_WORD
    name: "Battery power"
    unit_of_measurement: "W"
    accuracy_decimals: 1
    icon: mdi:flash
  - platform: modbus_controller
    address: 25274
    register_type: holding
    value_type: S_WORD
    name: "Battery current"
    unit_of_measurement: "A"
    accuracy_decimals: 1
    icon: mdi:current-dc
